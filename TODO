
something to decide
	- use persistent history, eg. save it to file
	- how much work is it, to add input of heredoc to history?
	- could we handle readline leak if we fork the process for each input?

Parsing
	=> input handling and history
		READLINE/ READLINE HISTORY
	=> parsing & tokenizing
	=> Handling quotes + braces
	=> Variable expansion

Execution
	=> Builtins
		cd
		echo
		env
		exit
		unset
		pwd		done
	=> Redirecting
	=> Pipes
	=> Heredoc
	=> execve

Runtime
	=> Variables (ENV)
	=> malloc and free of memory for command
	=> free
	=> Signalhandling (Sigabort does not close shell)


[program] >> [FILENAME]	append to filename
<< [EOF char]	wait for [EOF char] and the pipe as input
< [fileename] 	content of files as stdin
>	put output into file
|	pipe output of on to stdin of other
"
'


Programm call 
"cat -e"						">" 			"text.txt"
|								
v
"Progname cat" "Args:['-e']"

Recources:
https://cboard.cprogramming.com/c-programming/136521-memory-leak-readline.html
